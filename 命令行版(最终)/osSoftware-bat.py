import os
import json
import requests
import argparse
import urllib.parse
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

parser = argparse.ArgumentParser("\033[1;32mAuthor: huayang\033[0m", add_help=False)
ge = parser.add_argument_group("general", "general options")
target = parser.add_argument_group("target", "you must to specify target")


ge.add_argument("-h", "--help", action="help", help="show this help message and exit")
ge.add_argument("-s", "--search", nargs='+',dest="search", help="-s php,-s PostgreSQL 9.6.4,-s apache tomcat 9.0.11")
ge.add_argument("-n", "--name", dest="name", help="-n PostgreSQL in xxx.txt or apache tomcat in xxx.txt")
ge.add_argument("-e", "--edition", dest="edition", help="-e 9.0.11 in xxx.txt")
args = parser.parse_args()

#print(args.search,args.name,args.edition)
# 单个查找
def single():
    search = args.search
    null = len(args.search)
    if str(null) == '1':
        url = 'https://services.nvd.nist.gov/rest/json/cves/1.0?keyword=' + urllib.parse.quote(search[0],'utf-8') + '&resultsPerPage=100'
        try:
            response = requests.get(url,verify=False)
            if 'totalResults":0' in response.text:
                print('\033[1;31m[-] 暂未查询到漏洞\033[0m', search[0])
            else:
                res = json.loads((response.content).decode('utf-8'))
                #print(res)
                print('\033[1;32m[+] 这个版本存在大约', res["totalResults"], '个漏洞\033[0m', search[0])
                for i in range(res['totalResults']):
                    print('\t--', res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
        except Exception as e:
            print(e)
            pass
    elif str(null) == '2':

        one = args.search[0]
        two = args.search[1]
        url = 'https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=' + urllib.parse.quote('cpe:2.3:a:','utf-8') + one + '%3A' + one + '%3A' + two + urllib.parse.quote(':*', 'utf-8') + '&resultsPerPage=100'
        # print(url)
        try:
            response = requests.get(url, verify=False)
            pr = one + ' ' + two
            if 'totalResults":0' in response.text:
                print('\033[1;31m[-] 暂未查询到漏洞\033[0m', pr)
            else:
                res = json.loads((response.content).decode('utf-8'))
                print('\033[1;32m[+] 这个版本存在大约', res["totalResults"], '个漏洞\033[0m', pr)
                for i in range(res['totalResults']):
                    print('\t--', res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
        except Exception as e:
            print(e)
            pass
    elif str(null) == '3':
        one = args.search[0]
        two = args.search[1]
        three = args.search[2]
        url = 'https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=' + urllib.parse.quote('cpe:2.3:a:','utf-8') + one + '%3A' + two + '%3A' + three + urllib.parse.quote(':*', 'utf-8') + '&resultsPerPage=100'
        try:
            response = requests.get(url, verify=False)
            pr =   one + ' ' + two + ' ' + three
            if 'totalResults":0' in response.text:
                print('\033[1;31m[-] 暂未查询到漏洞\033[0m', pr)
            else:
                res = json.loads((response.content).decode('utf-8'))
                print('\033[1;32m[+] 这个版本存在大约', res["totalResults"], '个漏洞\033[0m', pr)
                for i in range(res['totalResults']):
                    print('\t--', res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
        except Exception as e:
            print(e)
            pass
    else:
        print('\033[1;31m哼塔[○･｀Д´･ ○],格式不符合规则\033[0m')

# 批量查找
def many():
    if os.access(args.name, os.F_OK) and os.access(args.edition, os.F_OK):
        search = args.name
        search = args.edition
        print('\033[1;32m>>>已检测到需求文件存在<<<\033[0m\n')
        def name():
            urls = open(args.name)
            for text in urls.readlines():
                data = text.strip('\n')
                yield data

        def et():
            urls = open(args.edition)
            for text in urls.readlines():
                data1 = text.strip('\n')
                yield data1

        with open('test.txt', 'w') as f1:
            f1.seek(0)
        for i, edition in zip(name(), et()):
            data = i + ':' + edition
            if ' ' in str(i):
                list = i.split()
                one = list[0]
                two = list[1]
                url = 'https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=' + urllib.parse.quote('cpe:2.3:a:', 'utf-8') + one + '%3A' + two + '%3A' + edition +urllib.parse.quote(':*', 'utf-8')  + '&resultsPerPage=100'
                try:
                    response = requests.get(url,verify=False)
                    if 'totalResults":0' in response.text:
                        print('\033[1;31m[-] 暂未查询到漏洞\033[0m',data)
                    else:
                        with open('test.txt', 'a') as f:
                            f.write('\n----------------------------------------------------------------------------------\n' + data + '\n')
                        res = json.loads((response.content).decode('utf-8'))
                        print('\033[1;32m[+] 这个版本存在大约',res["totalResults"],'个漏洞\033[0m',data)
                        for i in range(res['totalResults']):
                            print('\t--',res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
                            with open('test.txt', 'a') as f:
                                f.write('\t' + res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'] + '\n')
                except Exception as e:
                    print(e)
                    pass
            else:
                query = 'https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=' + urllib.parse.quote('cpe:2.3:a:','utf-8') + str(i) + '%3A' + urllib.parse.quote(data, 'utf-8') + urllib.parse.quote(':*', 'utf-8') + '&resultsPerPage=100'
                try:
                    response = requests.get(query,verify=False)
                    if 'totalResults":0' in response.text:
                        print('\033[1;31m[-] 暂未查询到漏洞\033[0m', data)
                    else:
                        with open('test.txt', 'a') as f:
                            f.write('\n----------------------------------------------------------------------------------\n' + data + '\n')
                        res = json.loads((response.content).decode('utf-8'))
                        print('\033[1;32m[+] 这个版本存在大约', res["totalResults"], '个漏洞\033[0m', data)
                        for i in range(res['totalResults']):
                            print('\t--', res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
                            with open('test.txt', 'a') as f:
                                f.write('\t' + res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'] + '\n')
                except Exception as e:
                    print(e)
                    pass
    else:
        print('\n\033[3;31m[○･｀Д´･ ○]未检测到name.txt或number.txt\033[0m')

if args.name  == None and args.edition == None:
    single()
elif args.search == None:
    many()
else:
    print('\n\033[3;31m你tm劈我瓜是吧\033[0m')