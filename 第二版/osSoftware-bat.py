#Author:huayang

import os
import json
import requests
import urllib.parse
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

print("""选择要扫描的类型：
    1 【单个匹配查询】               （常用于直接查询cve或当前软件所有漏洞，只输出前100个）
    2 【单个字典查询】               （常用于查版本漏洞）
    3 【批量字典扫描并写入test.txt】 （软件名和版本请分别放入name.txt、number.txt，记得用全名，全名用空格分开）
""")
inptu = input('请选择扫描方式:')

if inptu == '1':
    search = input('search:')
    url = 'https://services.nvd.nist.gov/rest/json/cves/1.0?keyword=' + urllib.parse.quote(search,'utf-8') + '&resultsPerPage=100'
    #print(url)
    try:
        response = requests.get(url,verify=False)
        if 'totalResults":0' in response.text:
            print('\033[1;31m[-] 暂未查询到漏洞\033[0m', search)
        else:
            res = json.loads((response.content).decode('utf-8'))
            #print(res)
            print('\033[1;32m[+] 这个版本存在大约', res["totalResults"], '个漏洞\033[0m', search)
            for i in range(res['totalResults']):
                print('\t--', res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
    except Exception as e:
        print(e)
        pass
#单个匹配查询
elif inptu == '2':
    search = input('search:')
    # data = nameOne + ':' + numberOne
    null = len(search) - len(search.replace(' ',''))
    if str(null) == '1':
        list = search.split()
        one = list[0]
        two = list[1]
        url = 'https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=' + urllib.parse.quote('cpe:2.3:a:', 'utf-8') + one + '%3A' + one + '%3A'+ two  +urllib.parse.quote(':*', 'utf-8')  + '&resultsPerPage=100'
        # print(url)
        try:
            response = requests.get(url,verify=False)
            if 'totalResults":0' in response.text:
                print('\033[1;31m[-] 暂未查询到漏洞\033[0m',search)
            else:
                res = json.loads((response.content).decode('utf-8'))
                print('\033[1;32m[+] 这个版本存在大约',res["totalResults"],'个漏洞\033[0m',search)
                for i in range(res['totalResults']):
                    print('\t--',res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
        except Exception as e:
            print(e)
            pass
    elif str(null) == '2':
        list = search.split()
        one = list[0]
        two = list[1]
        three = list[2]
        url = 'https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=' + urllib.parse.quote('cpe:2.3:a:', 'utf-8') + one + '%3A' + two + '%3A' + three + urllib.parse.quote(':*','utf-8') + '&resultsPerPage=100'
        try:
            response = requests.get(url,verify=False)
            if 'totalResults":0' in response.text:
                print('\033[1;31m[-] 暂未查询到漏洞\033[0m', search)
            else:
                res = json.loads((response.content).decode('utf-8'))
                print('\033[1;32m[+] 这个版本存在大约', res["totalResults"], '个漏洞\033[0m', search)
                for i in range(res['totalResults']):
                    print('\t--', res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
        except Exception as e:
            print(e)
            pass
    else:
        print('\033[1;31m哼塔[○･｀Д´･ ○],格式不符合规则\033[0m')

#批量查找
elif inptu == '3':
    if os.access("name.txt", os.F_OK) and os.access("number.txt", os.F_OK):
        print('\033[1;32m>>>已检测到name.txt和number.txt存在<<<\033[0m\n')
        def name():
            urls = open('name.txt')
            for text in urls.readlines():
                data = text.strip('\n')
                yield data

        def nmb():
            urls = open('number.txt')
            for text in urls.readlines():
                data1 = text.strip('\n')
                yield data1

        with open('test.txt', 'w') as f1:
            f1.seek(0)
        for i, edition in zip(name(), nmb()):
            data = i + ':' + edition
            if ' ' in str(i):
                list = i.split()
                one = list[0]
                two = list[1]
                url = 'https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=' + urllib.parse.quote('cpe:2.3:a:', 'utf-8') + one + '%3A' + two + '%3A' + edition +urllib.parse.quote(':*', 'utf-8')  + '&resultsPerPage=100'
                try:
                    response = requests.get(url,verify=False)
                    if 'totalResults":0' in response.text:
                        print('\033[1;31m[-] 暂未查询到漏洞\033[0m',data)
                    else:
                        with open('test.txt', 'a') as f:
                            f.write('\n----------------------------------------------------------------------------------\n' + data + '\n')
                        res = json.loads((response.content).decode('utf-8'))
                        print('\033[1;32m[+] 这个版本存在大约',res["totalResults"],'个漏洞\033[0m',data)
                        for i in range(res['totalResults']):
                            print('\t--',res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
                            with open('test.txt', 'a') as f:
                                f.write('\t' + res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'] + '\n')
                except Exception as e:
                    print(e)
                    pass
            else:
                query = 'https://services.nvd.nist.gov/rest/json/cves/1.0?cpeMatchString=' + urllib.parse.quote('cpe:2.3:a:','utf-8') + str(i) + '%3A' + urllib.parse.quote(data, 'utf-8') + urllib.parse.quote(':*', 'utf-8') + '&resultsPerPage=100'
                try:
                    response = requests.get(query,verify=False)
                    if 'totalResults":0' in response.text:
                        print('\033[1;31m[-] 暂未查询到漏洞\033[0m', data)
                    else:
                        with open('test.txt', 'a') as f:
                            f.write('\n----------------------------------------------------------------------------------\n' + data + '\n')
                        res = json.loads((response.content).decode('utf-8'))
                        print('\033[1;32m[+] 这个版本存在大约', res["totalResults"], '个漏洞\033[0m', data)
                        for i in range(res['totalResults']):
                            print('\t--', res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'])
                            with open('test.txt', 'a') as f:
                                f.write('\t' + res['result']['CVE_Items'][i]['cve']['CVE_data_meta']['ID'] + '\n')
                except Exception as e:
                    print(e)
                    pass
    else:
        print('\n\033[3;31m[○･｀Д´･ ○]未检测到name.txt或number.txt\033[0m')

else:
    print('\033[1;31m哼塔[○･｀Д´･ ○],请选择正确的扫描方式\033[0m')



